/* Generated by Together */

/**
 * @file name: CPOI.h
 * t_poi of type enumeration - to define POI types a POI can hold
 */

#ifndef CPOI_H
#define CPOI_H
#include "CWaypoint.h"


enum t_poi{Airport, ATM, Bank, Church, GasStation, Hospital, Hotel, Parking, Restaurant, RailwayStation, TouristSpot, unDefined};

// CPOI inherits CWaypoint - Public inheritance
class CPOI: public CWaypoint
{
public:

	/**
	 * CPOI constructor for class CPOI, assigns default values to members and to inherited members
	 * @param type - POI type
	 * @param name - POI name
	 * @param description - POI description
	 * @param latitude - POI latitude
	 * @param longitude - POI
	 */
    CPOI(t_poi type = unDefined, string name ="None", string description ="Not Available", double latitude=0, double longitude=0);

    /**
     * print - Printing POI details
     * @param format - DMS or Degree format select
     */
    void print(int format);

    /**
     * CPOI destructor
     */
    ~CPOI();

    /**
     * getAllDataByReference - return all details related to a POI
	 * @param type - POI type
	 * @param name - POI name
	 * @param description - POI description
	 * @param latitude - POI latitude
	 * @param longitude - POI
     */
    void getAllDataByReference(string& name, double & latitude, double & longitude, t_poi& type, string& description) const;

    /**
     * operator<< - overloaded << operator to output data directly with objects
     * @param os - cout in this program
     * @param obj - CPOI object
     * @return - cout in this program
     */
    friend ostream& operator<<(ostream& os, CPOI & obj);
    t_poi getType();
    string getDescription();

private:
    t_poi m_type;                   // POI type
    string m_description;           // POI description
};

#endif //CPOI_H
